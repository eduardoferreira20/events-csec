! function ($) {jQuery.fn.extend ({html5_qrcode: função (qrcodeSuccess, qrcodeError, videoError) {retornar this.each (function () {var currentElem = $ (this), height = currentElem.height (), largura = currentElem.width (); null == height && (height = 250), null == largura && (width = 300); var localMediaStream, vidElem = $ ('<largura do video = "' + largura + 'px" altura = "' + height + 'px "> </ video>'). appendTo (currentElem), canvasElem = $ ('<id de tela =" qr-canvas "width ="' + (largura-2) + 'px "height ="' + (altura-2) + 'px' style = "display: nenhum;"> </ canvas> '). appendTo (currentElem), video = vidElem [0], canvas = canvasElem [0], context = canvas.getContext ("2d"), scan = function () {if (localMediaStream) {context.drawImage (vídeo, 0,0,307,250); tente {qrcode.decode ()} catch (e) {qrcodeError (e,localMediaStream)} $. data (currentElem [0], "tempo limite", setTimeout (scan, 500))} mais $ .data (currentElem [0], "timeout", setTimeout (scan, 500))}; window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL, navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia; var successCallback = função (fluxo) {video.src = window.URL && window.URL.createObjectURL (stream) || stream, localMediaStream = fluxo, $. data (currentElem [0], "stream", fluxo), video.play (), $. data (currentElem [0], "timeout", setTimeout (scan, 1e3))}; navigator.getUserMedia? Navigator.getUserMedia ({video:! 0}, successCallback, função (erro) {videoError (erro, localMediaStream)}): console. log ("Streaming de câmera web nativa (getUserMedia) não suportado neste navegador"), qrcode.callback = função (resultado) {qrcodeSuccess (resultado, localMediaStream)}}}}, html5_qrcode_stop: function () {retornar this.each (function () {$ (this) .data ("stream"). getVideoTracks (). forEACH (função (videoTrack) {videoTrack.stop ()}), clearTimeout ($ (this) .data ("timeout"))})}})} (jQuery);
